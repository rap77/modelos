<?xml version = '1.0' encoding = 'UTF-8'?>
<PackageOracle class="oracle.dbtools.crest.model.design.storage.oracle.PackageOracle" name="TOOLKIT" directorySegmentName="seg_0" id="834F77D4-B2CD-03A0-E1CA-594EA3CDF877">
<sourceConnName>ces.local</sourceConnName>
<sourceObjSchema>CES</sourceObjSchema>
<sourceObjName>TOOLKIT</sourceObjName>
<createdBy>padron</createdBy>
<createdTime>2019-07-05 12:29:03 UTC</createdTime>
<ownerDesignName>CES-FUNDAUC</ownerDesignName>
<owner>97FD16BA-5F38-1D61-ED7A-CBFAE1D2218C</owner>
<source>CREATE OR REPLACE PACKAGE CES.TOOLKIT AS&lt;br/&gt;&lt;br/&gt;  FUNCTION encrypt (p_text  IN  VARCHAR2) RETURN RAW;&lt;br/&gt;  &lt;br/&gt;  FUNCTION decrypt (p_raw  IN  RAW) RETURN VARCHAR2;&lt;br/&gt;  &lt;br/&gt;  FUNCTION F_LOGIN (p_username IN VARCHAR2, p_password VARCHAR2) RETURN BOOLEAN;&lt;br/&gt;  &lt;br/&gt;END toolkit;</source>
<body class="oracle.dbtools.crest.model.design.storage.oracle.PackageBodyOracle" name="TOOLKIT" id="834F77D4-B2CD-03A0-E1CA-594EA3CDF877">
<sourceConnName>ces.local</sourceConnName>
<sourceObjSchema>CES</sourceObjSchema>
<sourceObjName>TOOLKIT</sourceObjName>
<createdBy>padron</createdBy>
<createdTime>2019-07-05 12:29:03 UTC</createdTime>
<ownerDesignName>CES-FUNDAUC</ownerDesignName>
<owner>97FD16BA-5F38-1D61-ED7A-CBFAE1D2218C</owner>
<source>CREATE OR REPLACE PACKAGE BODY CES.TOOLKIT AS&lt;br/&gt;&lt;br/&gt;  g_key     RAW(32767)  := UTL_RAW.cast_to_raw(&apos;fundauc2019&apos;);&lt;br/&gt;  g_pad_chr VARCHAR2(1) := &apos;~&apos;;&lt;br/&gt;&lt;br/&gt;  PROCEDURE padstring (p_text  IN OUT  VARCHAR2);&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;  -- --------------------------------------------------&lt;br/&gt;  FUNCTION encrypt (p_text  IN  VARCHAR2) RETURN RAW IS&lt;br/&gt;  -- --------------------------------------------------&lt;br/&gt;    l_text       VARCHAR2(32767) := p_text;&lt;br/&gt;    l_encrypted  RAW(32767);&lt;br/&gt;  BEGIN&lt;br/&gt;    padstring(l_text);&lt;br/&gt;    DBMS_OBFUSCATION_TOOLKIT.desencrypt(input          =&gt; UTL_RAW.cast_to_raw(l_text),&lt;br/&gt;                                        key            =&gt; g_key,&lt;br/&gt;                                        encrypted_data =&gt; l_encrypted);&lt;br/&gt;    RETURN l_encrypted;&lt;br/&gt;  END;&lt;br/&gt;  -- --------------------------------------------------&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;  -- --------------------------------------------------&lt;br/&gt;  FUNCTION decrypt (p_raw  IN  RAW) RETURN VARCHAR2 IS&lt;br/&gt;  -- --------------------------------------------------&lt;br/&gt;    l_decrypted  VARCHAR2(32767);&lt;br/&gt;  BEGIN&lt;br/&gt;    DBMS_OBFUSCATION_TOOLKIT.desdecrypt(input =&gt; p_raw,&lt;br/&gt;                                        key   =&gt; g_key,&lt;br/&gt;                                        decrypted_data =&gt; l_decrypted);&lt;br/&gt;                                        &lt;br/&gt;    RETURN RTrim(UTL_RAW.cast_to_varchar2(l_decrypted), g_pad_chr);&lt;br/&gt;  END;&lt;br/&gt;  -- --------------------------------------------------&lt;br/&gt;  &lt;br/&gt;  -- --------------------------------------------------&lt;br/&gt;  FUNCTION F_LOGIN (p_username IN VARCHAR2, p_password VARCHAR2) RETURN BOOLEAN IS&lt;br/&gt;    l_return number;&lt;br/&gt;    l_usuario usuarios.nombre_usuario%type;&lt;br/&gt;    l_password usuarios.contrasena%type;&lt;br/&gt;    begin &lt;br/&gt;      begin&lt;br/&gt;      select nombre_usuario,contrasena into l_usuario, l_password from usuarios where UPPER(nombre_usuario) = UPPER(p_username);&lt;br/&gt;      &lt;br/&gt; --     if toolkit.encrypt(p_password) = l_password and l_usuario = p_username then&lt;br/&gt;--      DBMS_OUTPUT.PUT_LINE(&apos;if = &apos; || upper(p_password)||&apos;=&apos;||l_password ||&apos; and &apos;||l_usuario||&apos;=&apos;||upper(p_username));&lt;br/&gt;      if upper(p_password) = upper(l_password) and upper(l_usuario) = upper(p_username) then&lt;br/&gt;        return true;&lt;br/&gt;        else&lt;br/&gt;        return false;&lt;br/&gt;      end if;&lt;br/&gt;      exception when no_data_found then&lt;br/&gt;        return false;  &lt;br/&gt;      end;&lt;br/&gt;  END;&lt;br/&gt;  -- --------------------------------------------------&lt;br/&gt;&lt;br/&gt;  -- --------------------------------------------------&lt;br/&gt;  PROCEDURE padstring (p_text  IN OUT  VARCHAR2) IS&lt;br/&gt;  -- --------------------------------------------------&lt;br/&gt;    l_units  NUMBER;&lt;br/&gt;  BEGIN&lt;br/&gt;    IF LENGTH(p_text) MOD 8 &gt; 0 THEN&lt;br/&gt;      l_units := TRUNC(LENGTH(p_text)/8) + 1;&lt;br/&gt;      p_text  := RPAD(p_text, l_units * 8, g_pad_chr);&lt;br/&gt;    END IF;&lt;br/&gt;  END;&lt;br/&gt;  -- --------------------------------------------------&lt;br/&gt;&lt;br/&gt;END toolkit;</source>
</body>
</PackageOracle>