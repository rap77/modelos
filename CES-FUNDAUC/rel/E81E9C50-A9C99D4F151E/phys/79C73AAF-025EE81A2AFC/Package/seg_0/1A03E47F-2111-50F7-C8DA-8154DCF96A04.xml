<?xml version = '1.0' encoding = 'UTF-8'?>
<PackageOracle class="oracle.dbtools.crest.model.design.storage.oracle.PackageOracle" name="PAQ" directorySegmentName="seg_0" id="1A03E47F-2111-50F7-C8DA-8154DCF96A04">
<sourceConnName>ces.local</sourceConnName>
<sourceObjSchema>CES</sourceObjSchema>
<sourceObjName>PAQ</sourceObjName>
<createdBy>padron</createdBy>
<createdTime>2019-07-05 12:29:03 UTC</createdTime>
<ownerDesignName>CES-FUNDAUC</ownerDesignName>
<owner>97FD16BA-5F38-1D61-ED7A-CBFAE1D2218C</owner>
<source>CREATE OR REPLACE PACKAGE     CES.PAQ&lt;br/&gt;AS&lt;br/&gt;   TYPE t_seq_row IS RECORD (fac NUMBER);&lt;br/&gt;&lt;br/&gt;   TYPE t_seq_tab IS TABLE OF t_seq_row;&lt;br/&gt;&lt;br/&gt;   TYPE t_des_row IS RECORD (fac VARCHAR2 (4000));&lt;br/&gt;&lt;br/&gt;   TYPE t_des_tab IS TABLE OF t_des_row;&lt;br/&gt;&lt;br/&gt;   TYPE array IS TABLE OF NUMBER;&lt;br/&gt;&lt;br/&gt;   FUNCTION get_seq_fac (p_fec IN DATE)&lt;br/&gt;      RETURN t_seq_tab&lt;br/&gt;      PIPELINED;&lt;br/&gt;&lt;br/&gt;   FUNCTION get_fac_anul (p_fec IN DATE)&lt;br/&gt;      RETURN t_des_tab&lt;br/&gt;      PIPELINED;&lt;br/&gt;&lt;br/&gt;   FUNCTION gen_numbers (n IN NUMBER DEFAULT NULL)&lt;br/&gt;      RETURN array&lt;br/&gt;      PIPELINED;&lt;br/&gt;END;</source>
<body class="oracle.dbtools.crest.model.design.storage.oracle.PackageBodyOracle" name="PAQ" id="1A03E47F-2111-50F7-C8DA-8154DCF96A04">
<sourceConnName>ces.local</sourceConnName>
<sourceObjSchema>CES</sourceObjSchema>
<sourceObjName>PAQ</sourceObjName>
<createdBy>padron</createdBy>
<createdTime>2019-07-05 12:29:03 UTC</createdTime>
<ownerDesignName>CES-FUNDAUC</ownerDesignName>
<owner>97FD16BA-5F38-1D61-ED7A-CBFAE1D2218C</owner>
<source>CREATE OR REPLACE PACKAGE BODY     CES.PAQ&lt;br/&gt;AS&lt;br/&gt;   FUNCTION get_seq_fac (p_fec IN DATE)&lt;br/&gt;      RETURN t_seq_tab&lt;br/&gt;      PIPELINED&lt;br/&gt;   IS&lt;br/&gt;      l_rec   t_seq_row;&lt;br/&gt;   BEGIN&lt;br/&gt;      FOR l_rec&lt;br/&gt;         IN (SELECT   (SELECT MINIMO (&lt;br/&gt;                                 &apos;factura&apos;,&lt;br/&gt;                                 &apos;id_fact&apos;,&lt;br/&gt;                                 &apos;fecha_emi=&apos; || &apos;&apos;&apos;&apos; || p_fec || &apos;&apos;&apos;&apos;)&lt;br/&gt;                         FROM DUAL)&lt;br/&gt;                    + (ROWNUM - 1)&lt;br/&gt;                       seq_fac&lt;br/&gt;               FROM all_tables t&lt;br/&gt;              WHERE   (SELECT MINIMO (&apos;factura&apos;, &apos;id_fact&apos;, &apos;fecha_emi=&apos; || &apos;&apos;&apos;&apos; || p_fec || &apos;&apos;&apos;&apos;)&lt;br/&gt;                         FROM DUAL)&lt;br/&gt;                    + (ROWNUM - 1) &lt;=&lt;br/&gt;                       (SELECT MAXIMO (&lt;br/&gt;                                  &apos;factura&apos;,&lt;br/&gt;                                  &apos;id_fact&apos;,&lt;br/&gt;                                  &apos;fecha_emi=&apos; || &apos;&apos;&apos;&apos; || p_fec || &apos;&apos;&apos;&apos;)&lt;br/&gt;                          FROM DUAL))&lt;br/&gt;      LOOP&lt;br/&gt;         PIPE ROW (l_rec);&lt;br/&gt;      END LOOP;&lt;br/&gt;&lt;br/&gt;      RETURN;&lt;br/&gt;   END get_seq_fac;&lt;br/&gt;&lt;br/&gt;   FUNCTION get_fac_anul (p_fec IN DATE)&lt;br/&gt;      RETURN t_des_tab&lt;br/&gt;      PIPELINED&lt;br/&gt;   IS&lt;br/&gt;      l_rec   t_des_row;&lt;br/&gt;   BEGIN&lt;br/&gt;      FOR l_rec&lt;br/&gt;         IN (SELECT    MIN ( (SELECT COUNT (*)&lt;br/&gt;                                FROM (SELECT fac&lt;br/&gt;                                        FROM TABLE (&lt;br/&gt;                                                paq.get_seq_fac (&lt;br/&gt;                                                   p_fec)))&lt;br/&gt;                               WHERE fac NOT IN (SELECT id_fact&lt;br/&gt;                                                   FROM factura&lt;br/&gt;                                                  WHERE fecha_emi = p_fec)))&lt;br/&gt;                    || &apos; Facturas Anuladas: &apos;&lt;br/&gt;                    || NVL (&lt;br/&gt;                          RTRIM (&lt;br/&gt;                             XMLAGG (XMLELEMENT (FAC, FAC || &apos;,&apos;)).EXTRACT (&lt;br/&gt;                                &apos;//text()&apos;),&lt;br/&gt;                             &apos;,&apos;),&lt;br/&gt;                          &apos;NINGUNA&apos;)&lt;br/&gt;               FROM (SELECT fac&lt;br/&gt;                       FROM (SELECT fac FROM TABLE (paq.get_seq_fac (p_fec)))&lt;br/&gt;                      WHERE fac NOT IN (SELECT id_fact&lt;br/&gt;                                          FROM factura&lt;br/&gt;                                         WHERE fecha_emi = p_fec)))&lt;br/&gt;      LOOP&lt;br/&gt;         PIPE ROW (l_rec);&lt;br/&gt;      END LOOP;&lt;br/&gt;&lt;br/&gt;      RETURN;&lt;br/&gt;   END get_fac_anul;&lt;br/&gt;&lt;br/&gt;   FUNCTION gen_numbers (n IN NUMBER DEFAULT NULL)&lt;br/&gt;      RETURN array&lt;br/&gt;      PIPELINED&lt;br/&gt;   IS&lt;br/&gt;   BEGIN&lt;br/&gt;      FOR i IN 1 .. NVL (n, 999999999)&lt;br/&gt;      LOOP&lt;br/&gt;         PIPE ROW (i);&lt;br/&gt;      END LOOP;&lt;br/&gt;&lt;br/&gt;      RETURN;&lt;br/&gt;   END gen_numbers;&lt;br/&gt;END;</source>
</body>
</PackageOracle>